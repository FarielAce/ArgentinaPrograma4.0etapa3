/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import java.util.TreeSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author fernando
 */
public class Main extends javax.swing.JFrame {

    public static TreeSet<Tarea> listaTareas = new TreeSet();
    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int f, int c) {
            return false;
        }
        Class[] types = new Class[]{
            java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
        };

        public Class getColumnClass(int columnIndex) {
            return types[columnIndex];
        }
    };

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        setTitle("Organizador");
        armarCabecera();
        demo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbTareas = new javax.swing.JTable();
        jtDescripcion = new javax.swing.JTextField();
        jtNombre = new javax.swing.JTextField();
        jbAgregar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbCompletado = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmCompletadas = new javax.swing.JMenuItem();
        jmEliminadas = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre");

        jLabel2.setText("Descripcion");

        jtbTareas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Descripcion", "Completado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtbTareas);

        jbAgregar.setText("Agregar");
        jbAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarActionPerformed(evt);
            }
        });

        jbEliminar.setText("Borrar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jbCompletado.setText("completado");
        jbCompletado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCompletadoActionPerformed(evt);
            }
        });

        jMenu1.setText("Tareas");

        jmCompletadas.setText("Completadas");
        jmCompletadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmCompletadasActionPerformed(evt);
            }
        });
        jMenu1.add(jmCompletadas);

        jmEliminadas.setText("Eliminadas");
        jmEliminadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmEliminadasActionPerformed(evt);
            }
        });
        jMenu1.add(jmEliminadas);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(29, 29, 29)
                        .addComponent(jtNombre))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbEliminar))
                    .addComponent(jbCompletado))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbAgregar)
                        .addComponent(jbEliminar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCompletado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarActionPerformed
        String Descripcion;
        if (jtNombre.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "El nombre es obligatorio",
                    "Error",
                    HEIGHT);
        } else {
            if (jtDescripcion.getText().isEmpty()) {
                Descripcion = "";
            } else {
                Descripcion = jtDescripcion.getText();
            }
            String Nombre = jtNombre.getText();

            Tarea nueva = new Tarea(Nombre, Descripcion);

            modelo.addRow(new Object[]{
                nueva.getNombre(),
                nueva.getDescripcion(),
                nueva.isCompletada(),});
            limpiarJt();
            listaTareas.add(nueva);
        }
    }//GEN-LAST:event_jbAgregarActionPerformed

    private void jbCompletadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCompletadoActionPerformed
        int filaS = jtbTareas.getSelectedRow();
        if (filaS == -1) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una tarea");
        } else {
            String nombre = (String) modelo.getValueAt(filaS, 0);
            String descripcion = (String) modelo.getValueAt(filaS, 1);
            boolean estado = (boolean) modelo.getValueAt(filaS, 2);
            for (Tarea tar : listaTareas) {
                if (nombre.equalsIgnoreCase(tar.getNombre()) && descripcion.equals(tar.getDescripcion()) && !estado) {
                    tar.setCompletada(true);
                    modelo.setValueAt(true, filaS, 2);
                }
            }

        }

    }//GEN-LAST:event_jbCompletadoActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        int filaS = jtbTareas.getSelectedRow();

        if (filaS != -1) {

            String nombre = (String) modelo.getValueAt(filaS, 0);
            String descripcion = (String) modelo.getValueAt(filaS, 1);
            boolean estado = (boolean) modelo.getValueAt(filaS, 2);
            for (Tarea tar : listaTareas) {
                if (nombre.equalsIgnoreCase(tar.getNombre()) && descripcion.equals(tar.getDescripcion())) {
                    tar.setEliminado(true);

                }
            }
            modelo.removeRow(filaS);
        } else {
            JOptionPane.showMessageDialog(this, "No Hay Tarea seleccionada");
        }
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jmCompletadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmCompletadasActionPerformed
        new listaCompletados().setVisible(true);

    }//GEN-LAST:event_jmCompletadasActionPerformed

    private void jmEliminadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmEliminadasActionPerformed
        new listaEliminados().setVisible(true);

    }//GEN-LAST:event_jmEliminadasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAgregar;
    private javax.swing.JButton jbCompletado;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JMenuItem jmCompletadas;
    private javax.swing.JMenuItem jmEliminadas;
    private javax.swing.JTextField jtDescripcion;
    private javax.swing.JTextField jtNombre;
    private javax.swing.JTable jtbTareas;
    // End of variables declaration//GEN-END:variables
private void armarCabecera() {
        modelo.addColumn("Nombre");
        modelo.addColumn("Descripcion");
        modelo.addColumn("Completada");
        jtbTareas.setModel(modelo);
    }

    private void limpiarJt() {
        jtNombre.setText("");
        jtDescripcion.setText("");

    }

    private void demo() {
        listaTareas.add(new Tarea("test1", "carga de prueba"));
        listaTareas.add(new Tarea("test2", "carga de prueba"));
        listaTareas.add(new Tarea("test3", "carga de prueba"));
        listaTareas.add(new Tarea("test4", "carga de prueba"));
        for (Tarea tarea : listaTareas) {

            modelo.addRow(new Object[]{tarea.getNombre(),
                    tarea.getDescripcion()
                    , tarea.isCompletada()
            });

        }
    }
}
